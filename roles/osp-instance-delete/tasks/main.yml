---
# tasks file for roles/osp-instance-delete
- name: Fetch Instance Info
  os_server_info:
    cloud: openstack
    region_name: regionOne
  register: r_os_servers

- name: Add host
  add_host:
    name: "{{ item.public_v4 }}"
    group:
      - "{{ item.metadata.group }}"
      - "{{ item.metadata.deployment_name }}"
  loop: "{{ r_os_servers.openstack_servers }}"

- name: delete floating IP to db instance
  os_floating_ip:
    cloud: openstack
    state: absent
    reuse: yes
    server: "{{ item.name }}"
    network: ext_network
    wait: true
    timeout: 200
  loop: "{{ r_os_servers.openstack_servers }}"

- name: Delete instances
  os_server:
    cloud: openstack
    name: "{{ item.name }}"
    state: absent
  loop: "{{ r_os_servers.openstack_servers }}"

#- name: Delete instances
#  os_server:
#    cloud: openstack
#    name: "{{ item.metadata.name }}"
#    image: "{{ item.metadata.image }}"
#    state: absent
#    key_name: "{{ item.metadata.key_name }}"
#    flavor: "{{ item.metadata.flavor }}"
#    security_groups: "{{ item.metadata.security_group }}"
#    delete_fip: yes
#    wait: no
#    nics:
#      - net-name: int_network
#    meta: "group={{ item.metadata.group }},deployment_name={{ item.metadata.deployment_name }}"
#    userdata: |
#      #!/bin/bash
#      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
#      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
#      curl -o /home/cloud-user/.ssh/openstack.pem http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pem
#      chown cloud-user. /home/cloud-user/.ssh/openstack.pem
#      chmod 0400 /home/cloud-user/.ssh/openstack.pem
#      curl -o /etc/yum.repos.d/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
#  loop: "{{ r_os_servers.openstack_servers }}"
#
